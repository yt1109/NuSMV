MODULE main
VAR
	trainA : {no_coal, has_coal, waiting, tunnel};
	trainB : {no_coal, has_coal, waiting, tunnel};
	trainC : {no_coal, has_coal, waiting, tunnel};
	controller : {A, B, C};
ASSIGN

	init(trainAA) := no_coal;
	init(trainB) := no_coal;
	init(trainC) := no_coal;
	

	next(trainA) :=
			case
				no_coal 			: has_coal;
				has_coal 			: waiting;
				waiting & controller = A	: tunnel;
				tunnel				: no_coal;
				TRUE				: trainA;
			esac;

	next(trainB) :=
			case
				no_coal 			: has_coal;
				has_coal 			: waiting;
				waiting & controller = B	: tunnel;
				tunnel				: no_coal;
				TRUE				: trainB;
			esac;

	next(trainC) :=
			case
				no_coal 			: has_coal;
				has_coal 			: waiting;
				waiting & controller = C	: tunnel;
				tunnel				: no_coal;
				TRUE				: trainC;
			esac;

	next(controller) :=
			case
				trainA = waiting 
					& !(trainB = tunnel)
					& !(trainC = tunnel)	: A;
				trainB = waiting
					& !(trainA = tunnel)	
					& !(trainC = tunnel)	: B;
				trainC = waiting
					& !(trainA = tunnel)
					& !(trainB = tunnel)	: C;
			esac;

SPEC
	AG(!(trainA = tunnel & trainB = tunnel & trainC = tunnel))				
